#!/usr/bin/env python
import argparse
import csv
import sys
import time
from datetime import datetime


def format_timestamp(timestamp):
    """
    Format timestamp as ISO 8601 https://en.wikipedia.org/wiki/ISO_8601

    We strftime manually so that we can make sure we only log to the minute
    rather than to the second.

    Also, we omit the "T" separator between date and time for nicer
    readability.
    "It is permitted to omit the 'T' character by mutual agreement."
    """
    return datetime.fromtimestamp(timestamp).strftime('%Y-%m-%d %H:%M')


def format_log_tsv(t, message):
    msg = "{}\t{}".format(t, message).strip()
    line = "\n" + msg
    return line


if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        description="""
        Logs messages with timestamps to CSV file.
        """,
    )
    parser.add_argument(
        '-r','--read',
        help="File to read from",
        type=argparse.FileType('r'),
        default=sys.stdin
    )
    parser.add_argument(
        '-w','--write',
        help="File to write to",
        # Create an append file cursor
        type=argparse.FileType('a'),
        default=sys.stdout
    )
    parser.add_argument(
        '-m','--message',
        help="Message to write to file",
        default=None
    )
    args = parser.parse_args()
    writefile = args.write
    t = format_timestamp(time.time())

    # Use message flag if present. Otherwise use file/stdout.
    lines = [args.message] if args.message else args.read
    # Timestamp each line
    logs = [format_log_tsv(t, line) for line in lines]

    # Write formatted logs to outfile
    for log in logs:
        writefile.write(log)
